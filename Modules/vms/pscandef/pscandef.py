# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pscandef', [dirname(__file__)])
        except ImportError:
            import _pscandef
            return _pscandef
        if fp is not None:
            try:
                _mod = imp.load_module('_pscandef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pscandef = swig_import_helper()
    del swig_import_helper
else:
    import _pscandef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_pscandef.pscan__BEGIN_swigconstant(_pscandef)
pscan__BEGIN = _pscandef.pscan__BEGIN

_pscandef.pscan__ACCOUNT_swigconstant(_pscandef)
pscan__ACCOUNT = _pscandef.pscan__ACCOUNT

_pscandef.pscan__AUTHPRI_swigconstant(_pscandef)
pscan__AUTHPRI = _pscandef.pscan__AUTHPRI

_pscandef.pscan__CURPRIV_swigconstant(_pscandef)
pscan__CURPRIV = _pscandef.pscan__CURPRIV

_pscandef.pscan__GRP_swigconstant(_pscandef)
pscan__GRP = _pscandef.pscan__GRP

_pscandef.pscan__HW_MODEL_swigconstant(_pscandef)
pscan__HW_MODEL = _pscandef.pscan__HW_MODEL

_pscandef.pscan__HW_NAME_swigconstant(_pscandef)
pscan__HW_NAME = _pscandef.pscan__HW_NAME

_pscandef.pscan__JOBPRCCNT_swigconstant(_pscandef)
pscan__JOBPRCCNT = _pscandef.pscan__JOBPRCCNT

_pscandef.pscan__JOBTYPE_swigconstant(_pscandef)
pscan__JOBTYPE = _pscandef.pscan__JOBTYPE

_pscandef.pscan__MASTER_PID_swigconstant(_pscandef)
pscan__MASTER_PID = _pscandef.pscan__MASTER_PID

_pscandef.pscan__MEM_swigconstant(_pscandef)
pscan__MEM = _pscandef.pscan__MEM

_pscandef.pscan__MODE_swigconstant(_pscandef)
pscan__MODE = _pscandef.pscan__MODE

_pscandef.pscan__NODE_CSID_swigconstant(_pscandef)
pscan__NODE_CSID = _pscandef.pscan__NODE_CSID

_pscandef.pscan__NODENAME_swigconstant(_pscandef)
pscan__NODENAME = _pscandef.pscan__NODENAME

_pscandef.pscan__OWNER_swigconstant(_pscandef)
pscan__OWNER = _pscandef.pscan__OWNER

_pscandef.pscan__PRCCNT_swigconstant(_pscandef)
pscan__PRCCNT = _pscandef.pscan__PRCCNT

_pscandef.pscan__PRCNAM_swigconstant(_pscandef)
pscan__PRCNAM = _pscandef.pscan__PRCNAM

_pscandef.pscan__PRI_swigconstant(_pscandef)
pscan__PRI = _pscandef.pscan__PRI

_pscandef.pscan__PRIB_swigconstant(_pscandef)
pscan__PRIB = _pscandef.pscan__PRIB

_pscandef.pscan__STATE_swigconstant(_pscandef)
pscan__STATE = _pscandef.pscan__STATE

_pscandef.pscan__STS_swigconstant(_pscandef)
pscan__STS = _pscandef.pscan__STS

_pscandef.pscan__TERMINAL_swigconstant(_pscandef)
pscan__TERMINAL = _pscandef.pscan__TERMINAL

_pscandef.pscan__UIC_swigconstant(_pscandef)
pscan__UIC = _pscandef.pscan__UIC

_pscandef.pscan__USERNAME_swigconstant(_pscandef)
pscan__USERNAME = _pscandef.pscan__USERNAME

_pscandef.pscan__GETJPI_BUFFER_SIZE_swigconstant(_pscandef)
pscan__GETJPI_BUFFER_SIZE = _pscandef.pscan__GETJPI_BUFFER_SIZE

_pscandef.pscan__PSCAN_CONTROL_FLAGS_swigconstant(_pscandef)
pscan__PSCAN_CONTROL_FLAGS = _pscandef.pscan__PSCAN_CONTROL_FLAGS

_pscandef.pscan__KT_COUNT_swigconstant(_pscandef)
pscan__KT_COUNT = _pscandef.pscan__KT_COUNT

_pscandef.pscan__MULTITHREAD_swigconstant(_pscandef)
pscan__MULTITHREAD = _pscandef.pscan__MULTITHREAD

_pscandef.pscan__SCHED_CLASS_NAME_swigconstant(_pscandef)
pscan__SCHED_CLASS_NAME = _pscandef.pscan__SCHED_CLASS_NAME

_pscandef.pscan__END_swigconstant(_pscandef)
pscan__END = _pscandef.pscan__END

_pscandef.pscan_k_type_swigconstant(_pscandef)
pscan_k_type = _pscandef.pscan_k_type

_pscandef.PSCAN_M_THREAD_swigconstant(_pscandef)
PSCAN_M_THREAD = _pscandef.PSCAN_M_THREAD

_pscandef.PSCAN_S_PSCANCTLDEF_swigconstant(_pscandef)
PSCAN_S_PSCANCTLDEF = _pscandef.PSCAN_S_PSCANCTLDEF

_pscandef.pscan_M_OR_swigconstant(_pscandef)
pscan_M_OR = _pscandef.pscan_M_OR

_pscandef.pscan_M_BIT_ALL_swigconstant(_pscandef)
pscan_M_BIT_ALL = _pscandef.pscan_M_BIT_ALL

_pscandef.pscan_M_BIT_ANY_swigconstant(_pscandef)
pscan_M_BIT_ANY = _pscandef.pscan_M_BIT_ANY

_pscandef.pscan_M_GEQ_swigconstant(_pscandef)
pscan_M_GEQ = _pscandef.pscan_M_GEQ

_pscandef.pscan_M_GTR_swigconstant(_pscandef)
pscan_M_GTR = _pscandef.pscan_M_GTR

_pscandef.pscan_M_LEQ_swigconstant(_pscandef)
pscan_M_LEQ = _pscandef.pscan_M_LEQ

_pscandef.pscan_M_LSS_swigconstant(_pscandef)
pscan_M_LSS = _pscandef.pscan_M_LSS

_pscandef.pscan_M_PREFIX_MATCH_swigconstant(_pscandef)
pscan_M_PREFIX_MATCH = _pscandef.pscan_M_PREFIX_MATCH

_pscandef.pscan_M_WILDCARD_swigconstant(_pscandef)
pscan_M_WILDCARD = _pscandef.pscan_M_WILDCARD

_pscandef.pscan_M_CASE_BLIND_swigconstant(_pscandef)
pscan_M_CASE_BLIND = _pscandef.pscan_M_CASE_BLIND

_pscandef.pscan_M_EQL_swigconstant(_pscandef)
pscan_M_EQL = _pscandef.pscan_M_EQL

_pscandef.pscan_M_NEQ_swigconstant(_pscandef)
pscan_M_NEQ = _pscandef.pscan_M_NEQ

_pscandef.pscan_S_item_specific_flags_swigconstant(_pscandef)
pscan_S_item_specific_flags = _pscandef.pscan_S_item_specific_flags
# This file is compatible with both classic and new-style classes.


