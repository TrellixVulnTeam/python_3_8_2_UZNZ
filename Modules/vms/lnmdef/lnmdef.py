# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_lnmdef', [dirname(__file__)])
        except ImportError:
            import _lnmdef
            return _lnmdef
        if fp is not None:
            try:
                _mod = imp.load_module('_lnmdef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _lnmdef = swig_import_helper()
    del swig_import_helper
else:
    import _lnmdef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_lnmdef.LNM_M_NO_ALIAS_swigconstant(_lnmdef)
LNM_M_NO_ALIAS = _lnmdef.LNM_M_NO_ALIAS

_lnmdef.LNM_M_CONFINE_swigconstant(_lnmdef)
LNM_M_CONFINE = _lnmdef.LNM_M_CONFINE

_lnmdef.LNM_M_CRELOG_swigconstant(_lnmdef)
LNM_M_CRELOG = _lnmdef.LNM_M_CRELOG

_lnmdef.LNM_M_TABLE_swigconstant(_lnmdef)
LNM_M_TABLE = _lnmdef.LNM_M_TABLE

_lnmdef.LNM_M_CONCEALED_swigconstant(_lnmdef)
LNM_M_CONCEALED = _lnmdef.LNM_M_CONCEALED

_lnmdef.LNM_M_TERMINAL_swigconstant(_lnmdef)
LNM_M_TERMINAL = _lnmdef.LNM_M_TERMINAL

_lnmdef.LNM_M_EXISTS_swigconstant(_lnmdef)
LNM_M_EXISTS = _lnmdef.LNM_M_EXISTS

_lnmdef.LNM_M_SHAREABLE_swigconstant(_lnmdef)
LNM_M_SHAREABLE = _lnmdef.LNM_M_SHAREABLE

_lnmdef.LNM_M_CLUSTERWIDE_swigconstant(_lnmdef)
LNM_M_CLUSTERWIDE = _lnmdef.LNM_M_CLUSTERWIDE

_lnmdef.LNM_M_DCL_REQUEST_swigconstant(_lnmdef)
LNM_M_DCL_REQUEST = _lnmdef.LNM_M_DCL_REQUEST

_lnmdef.LNM_M_CREATE_IF_swigconstant(_lnmdef)
LNM_M_CREATE_IF = _lnmdef.LNM_M_CREATE_IF

_lnmdef.LNM_M_CASE_BLIND_swigconstant(_lnmdef)
LNM_M_CASE_BLIND = _lnmdef.LNM_M_CASE_BLIND

_lnmdef.LNM_M_INTERLOCKED_swigconstant(_lnmdef)
LNM_M_INTERLOCKED = _lnmdef.LNM_M_INTERLOCKED

_lnmdef.LNM_M_LOCAL_ACTION_swigconstant(_lnmdef)
LNM_M_LOCAL_ACTION = _lnmdef.LNM_M_LOCAL_ACTION

_lnmdef.LNM_S_LNMDEF_swigconstant(_lnmdef)
LNM_S_LNMDEF = _lnmdef.LNM_S_LNMDEF

_lnmdef.LNM_C_TABNAMLEN_swigconstant(_lnmdef)
LNM_C_TABNAMLEN = _lnmdef.LNM_C_TABNAMLEN

_lnmdef.LNM_C_NAMLENGTH_swigconstant(_lnmdef)
LNM_C_NAMLENGTH = _lnmdef.LNM_C_NAMLENGTH

_lnmdef.LNM_C_MAXDEPTH_swigconstant(_lnmdef)
LNM_C_MAXDEPTH = _lnmdef.LNM_C_MAXDEPTH

_lnmdef.LNM__INDEX_swigconstant(_lnmdef)
LNM__INDEX = _lnmdef.LNM__INDEX

_lnmdef.LNM__STRING_swigconstant(_lnmdef)
LNM__STRING = _lnmdef.LNM__STRING

_lnmdef.LNM__ATTRIBUTES_swigconstant(_lnmdef)
LNM__ATTRIBUTES = _lnmdef.LNM__ATTRIBUTES

_lnmdef.LNM__TABLE_swigconstant(_lnmdef)
LNM__TABLE = _lnmdef.LNM__TABLE

_lnmdef.LNM__LENGTH_swigconstant(_lnmdef)
LNM__LENGTH = _lnmdef.LNM__LENGTH

_lnmdef.LNM__ACMODE_swigconstant(_lnmdef)
LNM__ACMODE = _lnmdef.LNM__ACMODE

_lnmdef.LNM__MAX_INDEX_swigconstant(_lnmdef)
LNM__MAX_INDEX = _lnmdef.LNM__MAX_INDEX

_lnmdef.LNM__PARENT_swigconstant(_lnmdef)
LNM__PARENT = _lnmdef.LNM__PARENT

_lnmdef.LNM__LNMB_ADDR_swigconstant(_lnmdef)
LNM__LNMB_ADDR = _lnmdef.LNM__LNMB_ADDR

_lnmdef.LNM__AGENT_ACMODE_swigconstant(_lnmdef)
LNM__AGENT_ACMODE = _lnmdef.LNM__AGENT_ACMODE

_lnmdef.LNM__CHAIN_swigconstant(_lnmdef)
LNM__CHAIN = _lnmdef.LNM__CHAIN
# This file is compatible with both classic and new-style classes.


