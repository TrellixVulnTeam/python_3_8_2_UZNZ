# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_stsdef', [dirname(__file__)])
        except ImportError:
            import _stsdef
            return _stsdef
        if fp is not None:
            try:
                _mod = imp.load_module('_stsdef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _stsdef = swig_import_helper()
    del swig_import_helper
else:
    import _stsdef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_stsdef.STS_M_SEVERITY_swigconstant(_stsdef)
STS_M_SEVERITY = _stsdef.STS_M_SEVERITY

_stsdef.STS_M_COND_ID_swigconstant(_stsdef)
STS_M_COND_ID = _stsdef.STS_M_COND_ID

_stsdef.STS_M_CONTROL_swigconstant(_stsdef)
STS_M_CONTROL = _stsdef.STS_M_CONTROL

_stsdef.STS_M_SUCCESS_swigconstant(_stsdef)
STS_M_SUCCESS = _stsdef.STS_M_SUCCESS

_stsdef.STS_M_MSG_NO_swigconstant(_stsdef)
STS_M_MSG_NO = _stsdef.STS_M_MSG_NO

_stsdef.STS_M_CODE_swigconstant(_stsdef)
STS_M_CODE = _stsdef.STS_M_CODE

_stsdef.STS_M_FAC_SP_swigconstant(_stsdef)
STS_M_FAC_SP = _stsdef.STS_M_FAC_SP

_stsdef.STS_M_CUST_DEF_swigconstant(_stsdef)
STS_M_CUST_DEF = _stsdef.STS_M_CUST_DEF

_stsdef.STS_M_INHIB_MSG_swigconstant(_stsdef)
STS_M_INHIB_MSG = _stsdef.STS_M_INHIB_MSG

_stsdef.STS_M_FAC_NO_swigconstant(_stsdef)
STS_M_FAC_NO = _stsdef.STS_M_FAC_NO

_stsdef.STS_K_WARNING_swigconstant(_stsdef)
STS_K_WARNING = _stsdef.STS_K_WARNING

_stsdef.STS_K_SUCCESS_swigconstant(_stsdef)
STS_K_SUCCESS = _stsdef.STS_K_SUCCESS

_stsdef.STS_K_ERROR_swigconstant(_stsdef)
STS_K_ERROR = _stsdef.STS_K_ERROR

_stsdef.STS_K_INFO_swigconstant(_stsdef)
STS_K_INFO = _stsdef.STS_K_INFO

_stsdef.STS_K_SEVERE_swigconstant(_stsdef)
STS_K_SEVERE = _stsdef.STS_K_SEVERE

_stsdef.STS_S_STSDEF_swigconstant(_stsdef)
STS_S_STSDEF = _stsdef.STS_S_STSDEF

_stsdef.STS_S_SEVERITY_swigconstant(_stsdef)
STS_S_SEVERITY = _stsdef.STS_S_SEVERITY

_stsdef.STS_S_COND_ID_swigconstant(_stsdef)
STS_S_COND_ID = _stsdef.STS_S_COND_ID

_stsdef.STS_S_CONTROL_swigconstant(_stsdef)
STS_S_CONTROL = _stsdef.STS_S_CONTROL

_stsdef.STS_S_MSG_NO_swigconstant(_stsdef)
STS_S_MSG_NO = _stsdef.STS_S_MSG_NO

_stsdef.STS_S_CODE_swigconstant(_stsdef)
STS_S_CODE = _stsdef.STS_S_CODE

_stsdef.STS_S_FAC_NO_swigconstant(_stsdef)
STS_S_FAC_NO = _stsdef.STS_S_FAC_NO
# This file is compatible with both classic and new-style classes.


