# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_decc', [dirname(__file__)])
        except ImportError:
            import _decc
            return _decc
        if fp is not None:
            try:
                _mod = imp.load_module('_decc', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _decc = swig_import_helper()
    del swig_import_helper
else:
    import _decc
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_decc._SC_ARG_MAX_swigconstant(_decc)
_SC_ARG_MAX = _decc._SC_ARG_MAX

_decc._SC_CHILD_MAX_swigconstant(_decc)
_SC_CHILD_MAX = _decc._SC_CHILD_MAX

_decc._SC_CLK_TCK_swigconstant(_decc)
_SC_CLK_TCK = _decc._SC_CLK_TCK

_decc._SC_NGROUPS_MAX_swigconstant(_decc)
_SC_NGROUPS_MAX = _decc._SC_NGROUPS_MAX

_decc._SC_OPEN_MAX_swigconstant(_decc)
_SC_OPEN_MAX = _decc._SC_OPEN_MAX

_decc._SC_STREAM_MAX_swigconstant(_decc)
_SC_STREAM_MAX = _decc._SC_STREAM_MAX

_decc._SC_TZNAME_MAX_swigconstant(_decc)
_SC_TZNAME_MAX = _decc._SC_TZNAME_MAX

_decc._SC_JOB_CONTROL_swigconstant(_decc)
_SC_JOB_CONTROL = _decc._SC_JOB_CONTROL

_decc._SC_SAVED_IDS_swigconstant(_decc)
_SC_SAVED_IDS = _decc._SC_SAVED_IDS

_decc._SC_VERSION_swigconstant(_decc)
_SC_VERSION = _decc._SC_VERSION

_decc._SC_BC_BASE_MAX_swigconstant(_decc)
_SC_BC_BASE_MAX = _decc._SC_BC_BASE_MAX

_decc._SC_BC_DIM_MAX_swigconstant(_decc)
_SC_BC_DIM_MAX = _decc._SC_BC_DIM_MAX

_decc._SC_BC_SCALE_MAX_swigconstant(_decc)
_SC_BC_SCALE_MAX = _decc._SC_BC_SCALE_MAX

_decc._SC_BC_STRING_MAX_swigconstant(_decc)
_SC_BC_STRING_MAX = _decc._SC_BC_STRING_MAX

_decc._SC_COLL_WEIGHTS_MAX_swigconstant(_decc)
_SC_COLL_WEIGHTS_MAX = _decc._SC_COLL_WEIGHTS_MAX

_decc._SC_EXPR_NEST_MAX_swigconstant(_decc)
_SC_EXPR_NEST_MAX = _decc._SC_EXPR_NEST_MAX

_decc._SC_LINE_MAX_swigconstant(_decc)
_SC_LINE_MAX = _decc._SC_LINE_MAX

_decc._SC_RE_DUP_MAX_swigconstant(_decc)
_SC_RE_DUP_MAX = _decc._SC_RE_DUP_MAX

_decc._SC_2_VERSION_swigconstant(_decc)
_SC_2_VERSION = _decc._SC_2_VERSION

_decc._SC_2_C_BIND_swigconstant(_decc)
_SC_2_C_BIND = _decc._SC_2_C_BIND

_decc._SC_2_C_DEV_swigconstant(_decc)
_SC_2_C_DEV = _decc._SC_2_C_DEV

_decc._SC_2_FORT_DEV_swigconstant(_decc)
_SC_2_FORT_DEV = _decc._SC_2_FORT_DEV

_decc._SC_2_SW_DEV_swigconstant(_decc)
_SC_2_SW_DEV = _decc._SC_2_SW_DEV

_decc._SC_2_FORT_RUN_swigconstant(_decc)
_SC_2_FORT_RUN = _decc._SC_2_FORT_RUN

_decc._SC_2_LOCALEDEF_swigconstant(_decc)
_SC_2_LOCALEDEF = _decc._SC_2_LOCALEDEF

_decc._SC_2_UPE_swigconstant(_decc)
_SC_2_UPE = _decc._SC_2_UPE

_decc._SC_GETGR_R_SIZE_MAX_swigconstant(_decc)
_SC_GETGR_R_SIZE_MAX = _decc._SC_GETGR_R_SIZE_MAX

_decc._SC_GETPW_R_SIZE_MAX_swigconstant(_decc)
_SC_GETPW_R_SIZE_MAX = _decc._SC_GETPW_R_SIZE_MAX

_decc._SC_THREAD_DESTRUCTOR_ITERATIONS_swigconstant(_decc)
_SC_THREAD_DESTRUCTOR_ITERATIONS = _decc._SC_THREAD_DESTRUCTOR_ITERATIONS

_decc._SC_THREAD_KEYS_MAX_swigconstant(_decc)
_SC_THREAD_KEYS_MAX = _decc._SC_THREAD_KEYS_MAX

_decc._SC_THREAD_STACK_MIN_swigconstant(_decc)
_SC_THREAD_STACK_MIN = _decc._SC_THREAD_STACK_MIN

_decc._SC_THREAD_THREADS_MAX_swigconstant(_decc)
_SC_THREAD_THREADS_MAX = _decc._SC_THREAD_THREADS_MAX

_decc._SC_THREAD_SAFE_FUNCTIONS_swigconstant(_decc)
_SC_THREAD_SAFE_FUNCTIONS = _decc._SC_THREAD_SAFE_FUNCTIONS

_decc._SC_THREADS_swigconstant(_decc)
_SC_THREADS = _decc._SC_THREADS

_decc._SC_THREAD_ATTR_STACKSIZE_swigconstant(_decc)
_SC_THREAD_ATTR_STACKSIZE = _decc._SC_THREAD_ATTR_STACKSIZE

_decc._SC_THREAD_PRIORITY_SCHEDULING_swigconstant(_decc)
_SC_THREAD_PRIORITY_SCHEDULING = _decc._SC_THREAD_PRIORITY_SCHEDULING

_decc._SC_XOPEN_VERSION_swigconstant(_decc)
_SC_XOPEN_VERSION = _decc._SC_XOPEN_VERSION

_decc._SC_PASS_MAX_swigconstant(_decc)
_SC_PASS_MAX = _decc._SC_PASS_MAX

_decc._SC_XOPEN_CRYPT_swigconstant(_decc)
_SC_XOPEN_CRYPT = _decc._SC_XOPEN_CRYPT

_decc._SC_XOPEN_ENH_I18N_swigconstant(_decc)
_SC_XOPEN_ENH_I18N = _decc._SC_XOPEN_ENH_I18N

_decc._SC_XOPEN_SHM_swigconstant(_decc)
_SC_XOPEN_SHM = _decc._SC_XOPEN_SHM

_decc._SC_PAGESIZE_swigconstant(_decc)
_SC_PAGESIZE = _decc._SC_PAGESIZE

_decc._SC_PAGE_SIZE_swigconstant(_decc)
_SC_PAGE_SIZE = _decc._SC_PAGE_SIZE

_decc._SC_ATEXIT_MAX_swigconstant(_decc)
_SC_ATEXIT_MAX = _decc._SC_ATEXIT_MAX

_decc._SC_IOV_MAX_swigconstant(_decc)
_SC_IOV_MAX = _decc._SC_IOV_MAX

_decc._SC_XOPEN_UNIX_swigconstant(_decc)
_SC_XOPEN_UNIX = _decc._SC_XOPEN_UNIX

_decc._SC_NPROC_CONF_swigconstant(_decc)
_SC_NPROC_CONF = _decc._SC_NPROC_CONF

_decc._SC_NPROCESSORS_CONF_swigconstant(_decc)
_SC_NPROCESSORS_CONF = _decc._SC_NPROCESSORS_CONF

_decc._SC_NPROC_ONLN_swigconstant(_decc)
_SC_NPROC_ONLN = _decc._SC_NPROC_ONLN

_decc._SC_NPROCESSORS_ONLN_swigconstant(_decc)
_SC_NPROCESSORS_ONLN = _decc._SC_NPROCESSORS_ONLN

_decc._SC_2_C_VERSION_swigconstant(_decc)
_SC_2_C_VERSION = _decc._SC_2_C_VERSION

_decc._SC_2_CHAR_TERM_swigconstant(_decc)
_SC_2_CHAR_TERM = _decc._SC_2_CHAR_TERM

_decc._SC_DELAYTIMER_MAX_swigconstant(_decc)
_SC_DELAYTIMER_MAX = _decc._SC_DELAYTIMER_MAX

_decc._SC_TIMER_MAX_swigconstant(_decc)
_SC_TIMER_MAX = _decc._SC_TIMER_MAX

_decc._SC_MAPPED_FILES_swigconstant(_decc)
_SC_MAPPED_FILES = _decc._SC_MAPPED_FILES

_decc._SC_FSYNC_swigconstant(_decc)
_SC_FSYNC = _decc._SC_FSYNC

_decc._SC_TIMERS_swigconstant(_decc)
_SC_TIMERS = _decc._SC_TIMERS

_decc._SC_CPU_CHIP_TYPE_swigconstant(_decc)
_SC_CPU_CHIP_TYPE = _decc._SC_CPU_CHIP_TYPE

def fix_time(arg1):
    return _decc.fix_time(arg1)
fix_time = _decc.fix_time

def unixtime(dt):
    return _decc.unixtime(dt)
unixtime = _decc.unixtime

def vmstime(arg1):
    return _decc.vmstime(arg1)
vmstime = _decc.vmstime

def from_vms(arg1):
    return _decc.from_vms(arg1)
from_vms = _decc.from_vms

def to_vms(arg1):
    return _decc.to_vms(arg1)
to_vms = _decc.to_vms

def getenv(arg1, arg2):
    return _decc.getenv(arg1, arg2)
getenv = _decc.getenv

def sysconf(arg1):
    return _decc.sysconf(arg1)
sysconf = _decc.sysconf

def sleep(arg1):
    return _decc.sleep(arg1)
sleep = _decc.sleep
# This file is compatible with both classic and new-style classes.


