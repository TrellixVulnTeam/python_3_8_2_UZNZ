# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_stenvdef', [dirname(__file__)])
        except ImportError:
            import _stenvdef
            return _stenvdef
        if fp is not None:
            try:
                _mod = imp.load_module('_stenvdef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _stenvdef = swig_import_helper()
    del swig_import_helper
else:
    import _stenvdef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_stenvdef.STENV_K_AUTO_ACTION_swigconstant(_stenvdef)
STENV_K_AUTO_ACTION = _stenvdef.STENV_K_AUTO_ACTION

_stenvdef.STENV_K_BOOT_DEV_swigconstant(_stenvdef)
STENV_K_BOOT_DEV = _stenvdef.STENV_K_BOOT_DEV

_stenvdef.STENV_K_BOOTDEF_DEV_swigconstant(_stenvdef)
STENV_K_BOOTDEF_DEV = _stenvdef.STENV_K_BOOTDEF_DEV

_stenvdef.STENV_K_BOOTED_DEV_swigconstant(_stenvdef)
STENV_K_BOOTED_DEV = _stenvdef.STENV_K_BOOTED_DEV

_stenvdef.STENV_K_BOOT_FILE_swigconstant(_stenvdef)
STENV_K_BOOT_FILE = _stenvdef.STENV_K_BOOT_FILE

_stenvdef.STENV_K_BOOTED_FILE_swigconstant(_stenvdef)
STENV_K_BOOTED_FILE = _stenvdef.STENV_K_BOOTED_FILE

_stenvdef.STENV_K_BOOT_OSFLAGS_swigconstant(_stenvdef)
STENV_K_BOOT_OSFLAGS = _stenvdef.STENV_K_BOOT_OSFLAGS

_stenvdef.STENV_K_BOOTED_OSFLAGS_swigconstant(_stenvdef)
STENV_K_BOOTED_OSFLAGS = _stenvdef.STENV_K_BOOTED_OSFLAGS

_stenvdef.STENV_K_BOOT_RESET_swigconstant(_stenvdef)
STENV_K_BOOT_RESET = _stenvdef.STENV_K_BOOT_RESET

_stenvdef.STENV_K_DUMP_DEV_swigconstant(_stenvdef)
STENV_K_DUMP_DEV = _stenvdef.STENV_K_DUMP_DEV

_stenvdef.STENV_K_ENABLE_AUDIT_swigconstant(_stenvdef)
STENV_K_ENABLE_AUDIT = _stenvdef.STENV_K_ENABLE_AUDIT

_stenvdef.STENV_K_LICENSE_swigconstant(_stenvdef)
STENV_K_LICENSE = _stenvdef.STENV_K_LICENSE

_stenvdef.STENV_K_CHAR_SET_swigconstant(_stenvdef)
STENV_K_CHAR_SET = _stenvdef.STENV_K_CHAR_SET

_stenvdef.STENV_K_LANGUAGE_swigconstant(_stenvdef)
STENV_K_LANGUAGE = _stenvdef.STENV_K_LANGUAGE

_stenvdef.STENV_K_TTY_DEV_swigconstant(_stenvdef)
STENV_K_TTY_DEV = _stenvdef.STENV_K_TTY_DEV

_stenvdef.STENV_K_SYSROOT_swigconstant(_stenvdef)
STENV_K_SYSROOT = _stenvdef.STENV_K_SYSROOT

_stenvdef.STENV_K_BTFLAGS_swigconstant(_stenvdef)
STENV_K_BTFLAGS = _stenvdef.STENV_K_BTFLAGS

_stenvdef.STENV_K_FRU_EEROM_swigconstant(_stenvdef)
STENV_K_FRU_EEROM = _stenvdef.STENV_K_FRU_EEROM

_stenvdef.STENVDEF_S_ItemType_swigconstant(_stenvdef)
STENVDEF_S_ItemType = _stenvdef.STENVDEF_S_ItemType

_stenvdef.STENVDEF_S_BUF_ADDR_swigconstant(_stenvdef)
STENVDEF_S_BUF_ADDR = _stenvdef.STENVDEF_S_BUF_ADDR

_stenvdef.STENVDEF_S_RET_ADDR_swigconstant(_stenvdef)
STENVDEF_S_RET_ADDR = _stenvdef.STENVDEF_S_RET_ADDR

_stenvdef.STENVDEF__K_FREE_FORM_swigconstant(_stenvdef)
STENVDEF__K_FREE_FORM = _stenvdef.STENVDEF__K_FREE_FORM

_stenvdef.STENVDEF__K_SDD_LOG_swigconstant(_stenvdef)
STENVDEF__K_SDD_LOG = _stenvdef.STENVDEF__K_SDD_LOG
# This file is compatible with both classic and new-style classes.


