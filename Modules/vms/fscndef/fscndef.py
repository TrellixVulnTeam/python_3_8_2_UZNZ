# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_fscndef', [dirname(__file__)])
        except ImportError:
            import _fscndef
            return _fscndef
        if fp is not None:
            try:
                _mod = imp.load_module('_fscndef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _fscndef = swig_import_helper()
    del swig_import_helper
else:
    import _fscndef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_fscndef.FSCN_M_NODE_swigconstant(_fscndef)
FSCN_M_NODE = _fscndef.FSCN_M_NODE

_fscndef.FSCN_M_DEVICE_swigconstant(_fscndef)
FSCN_M_DEVICE = _fscndef.FSCN_M_DEVICE

_fscndef.FSCN_M_ROOT_swigconstant(_fscndef)
FSCN_M_ROOT = _fscndef.FSCN_M_ROOT

_fscndef.FSCN_M_DIRECTORY_swigconstant(_fscndef)
FSCN_M_DIRECTORY = _fscndef.FSCN_M_DIRECTORY

_fscndef.FSCN_M_NAME_swigconstant(_fscndef)
FSCN_M_NAME = _fscndef.FSCN_M_NAME

_fscndef.FSCN_M_TYPE_swigconstant(_fscndef)
FSCN_M_TYPE = _fscndef.FSCN_M_TYPE

_fscndef.FSCN_M_VERSION_swigconstant(_fscndef)
FSCN_M_VERSION = _fscndef.FSCN_M_VERSION

_fscndef.FSCN_M_NODE_PRIMARY_swigconstant(_fscndef)
FSCN_M_NODE_PRIMARY = _fscndef.FSCN_M_NODE_PRIMARY

_fscndef.FSCN_M_NODE_ACS_swigconstant(_fscndef)
FSCN_M_NODE_ACS = _fscndef.FSCN_M_NODE_ACS

_fscndef.FSCN_M_NODE_SECONDARY_swigconstant(_fscndef)
FSCN_M_NODE_SECONDARY = _fscndef.FSCN_M_NODE_SECONDARY

_fscndef.FSCN_S_FLDFLAGS_swigconstant(_fscndef)
FSCN_S_FLDFLAGS = _fscndef.FSCN_S_FLDFLAGS

_fscndef.FSCN__FILESPEC_swigconstant(_fscndef)
FSCN__FILESPEC = _fscndef.FSCN__FILESPEC

_fscndef.FSCN__NODE_swigconstant(_fscndef)
FSCN__NODE = _fscndef.FSCN__NODE

_fscndef.FSCN__DEVICE_swigconstant(_fscndef)
FSCN__DEVICE = _fscndef.FSCN__DEVICE

_fscndef.FSCN__ROOT_swigconstant(_fscndef)
FSCN__ROOT = _fscndef.FSCN__ROOT

_fscndef.FSCN__DIRECTORY_swigconstant(_fscndef)
FSCN__DIRECTORY = _fscndef.FSCN__DIRECTORY

_fscndef.FSCN__NAME_swigconstant(_fscndef)
FSCN__NAME = _fscndef.FSCN__NAME

_fscndef.FSCN__TYPE_swigconstant(_fscndef)
FSCN__TYPE = _fscndef.FSCN__TYPE

_fscndef.FSCN__VERSION_swigconstant(_fscndef)
FSCN__VERSION = _fscndef.FSCN__VERSION

_fscndef.FSCN__NODE_PRIMARY_swigconstant(_fscndef)
FSCN__NODE_PRIMARY = _fscndef.FSCN__NODE_PRIMARY

_fscndef.FSCN__NODE_ACS_swigconstant(_fscndef)
FSCN__NODE_ACS = _fscndef.FSCN__NODE_ACS

_fscndef.FSCN__NODE_SECONDARY_swigconstant(_fscndef)
FSCN__NODE_SECONDARY = _fscndef.FSCN__NODE_SECONDARY

_fscndef.FSCN_S_ITEM_LEN_swigconstant(_fscndef)
FSCN_S_ITEM_LEN = _fscndef.FSCN_S_ITEM_LEN

_fscndef.FSCN_S_FSCNDEF_swigconstant(_fscndef)
FSCN_S_FSCNDEF = _fscndef.FSCN_S_FSCNDEF
# This file is compatible with both classic and new-style classes.


