# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_capdef', [dirname(__file__)])
        except ImportError:
            import _capdef
            return _capdef
        if fp is not None:
            try:
                _mod = imp.load_module('_capdef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _capdef = swig_import_helper()
    del swig_import_helper
else:
    import _capdef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_capdef.CAP_K_ALL_USER_swigconstant(_capdef)
CAP_K_ALL_USER = _capdef.CAP_K_ALL_USER

_capdef.CAP_K_ALL_USER_ADD_swigconstant(_capdef)
CAP_K_ALL_USER_ADD = _capdef.CAP_K_ALL_USER_ADD

_capdef.CAP_K_ALL_CPU_ADD_swigconstant(_capdef)
CAP_K_ALL_CPU_ADD = _capdef.CAP_K_ALL_CPU_ADD

_capdef.CAP_K_ALL_ACTIVE_CPUS_swigconstant(_capdef)
CAP_K_ALL_ACTIVE_CPUS = _capdef.CAP_K_ALL_ACTIVE_CPUS

_capdef.CAP_K_ALL_USER_REMOVE_swigconstant(_capdef)
CAP_K_ALL_USER_REMOVE = _capdef.CAP_K_ALL_USER_REMOVE

_capdef.CAP_K_ALL_CPU_REMOVE_swigconstant(_capdef)
CAP_K_ALL_CPU_REMOVE = _capdef.CAP_K_ALL_CPU_REMOVE

_capdef.CAP_K_GET_FREE_CAP_swigconstant(_capdef)
CAP_K_GET_FREE_CAP = _capdef.CAP_K_GET_FREE_CAP

_capdef.CAP_M_USER1_swigconstant(_capdef)
CAP_M_USER1 = _capdef.CAP_M_USER1

_capdef.CAP_M_USER2_swigconstant(_capdef)
CAP_M_USER2 = _capdef.CAP_M_USER2

_capdef.CAP_M_USER3_swigconstant(_capdef)
CAP_M_USER3 = _capdef.CAP_M_USER3

_capdef.CAP_M_USER4_swigconstant(_capdef)
CAP_M_USER4 = _capdef.CAP_M_USER4

_capdef.CAP_M_USER5_swigconstant(_capdef)
CAP_M_USER5 = _capdef.CAP_M_USER5

_capdef.CAP_M_USER6_swigconstant(_capdef)
CAP_M_USER6 = _capdef.CAP_M_USER6

_capdef.CAP_M_USER7_swigconstant(_capdef)
CAP_M_USER7 = _capdef.CAP_M_USER7

_capdef.CAP_M_USER8_swigconstant(_capdef)
CAP_M_USER8 = _capdef.CAP_M_USER8

_capdef.CAP_M_USER9_swigconstant(_capdef)
CAP_M_USER9 = _capdef.CAP_M_USER9

_capdef.CAP_M_USER10_swigconstant(_capdef)
CAP_M_USER10 = _capdef.CAP_M_USER10

_capdef.CAP_M_USER11_swigconstant(_capdef)
CAP_M_USER11 = _capdef.CAP_M_USER11

_capdef.CAP_M_USER12_swigconstant(_capdef)
CAP_M_USER12 = _capdef.CAP_M_USER12

_capdef.CAP_M_USER13_swigconstant(_capdef)
CAP_M_USER13 = _capdef.CAP_M_USER13

_capdef.CAP_M_USER14_swigconstant(_capdef)
CAP_M_USER14 = _capdef.CAP_M_USER14

_capdef.CAP_M_USER15_swigconstant(_capdef)
CAP_M_USER15 = _capdef.CAP_M_USER15

_capdef.CAP_M_USER16_swigconstant(_capdef)
CAP_M_USER16 = _capdef.CAP_M_USER16

_capdef.CAP_S_CAP_swigconstant(_capdef)
CAP_S_CAP = _capdef.CAP_S_CAP

_capdef.CAP_M_CPU0_swigconstant(_capdef)
CAP_M_CPU0 = _capdef.CAP_M_CPU0

_capdef.CAP_M_CPU1_swigconstant(_capdef)
CAP_M_CPU1 = _capdef.CAP_M_CPU1

_capdef.CAP_M_CPU2_swigconstant(_capdef)
CAP_M_CPU2 = _capdef.CAP_M_CPU2

_capdef.CAP_M_CPU3_swigconstant(_capdef)
CAP_M_CPU3 = _capdef.CAP_M_CPU3

_capdef.CAP_M_CPU4_swigconstant(_capdef)
CAP_M_CPU4 = _capdef.CAP_M_CPU4

_capdef.CAP_M_CPU5_swigconstant(_capdef)
CAP_M_CPU5 = _capdef.CAP_M_CPU5

_capdef.CAP_M_CPU6_swigconstant(_capdef)
CAP_M_CPU6 = _capdef.CAP_M_CPU6

_capdef.CAP_M_CPU7_swigconstant(_capdef)
CAP_M_CPU7 = _capdef.CAP_M_CPU7

_capdef.CAP_M_CPU8_swigconstant(_capdef)
CAP_M_CPU8 = _capdef.CAP_M_CPU8

_capdef.CAP_M_CPU9_swigconstant(_capdef)
CAP_M_CPU9 = _capdef.CAP_M_CPU9

_capdef.CAP_M_CPU10_swigconstant(_capdef)
CAP_M_CPU10 = _capdef.CAP_M_CPU10

_capdef.CAP_M_CPU11_swigconstant(_capdef)
CAP_M_CPU11 = _capdef.CAP_M_CPU11

_capdef.CAP_M_CPU12_swigconstant(_capdef)
CAP_M_CPU12 = _capdef.CAP_M_CPU12

_capdef.CAP_M_CPU13_swigconstant(_capdef)
CAP_M_CPU13 = _capdef.CAP_M_CPU13

_capdef.CAP_M_CPU14_swigconstant(_capdef)
CAP_M_CPU14 = _capdef.CAP_M_CPU14

_capdef.CAP_M_CPU15_swigconstant(_capdef)
CAP_M_CPU15 = _capdef.CAP_M_CPU15

_capdef.CAP_M_CPU16_swigconstant(_capdef)
CAP_M_CPU16 = _capdef.CAP_M_CPU16

_capdef.CAP_M_CPU17_swigconstant(_capdef)
CAP_M_CPU17 = _capdef.CAP_M_CPU17

_capdef.CAP_M_CPU18_swigconstant(_capdef)
CAP_M_CPU18 = _capdef.CAP_M_CPU18

_capdef.CAP_M_CPU19_swigconstant(_capdef)
CAP_M_CPU19 = _capdef.CAP_M_CPU19

_capdef.CAP_M_CPU20_swigconstant(_capdef)
CAP_M_CPU20 = _capdef.CAP_M_CPU20

_capdef.CAP_M_CPU21_swigconstant(_capdef)
CAP_M_CPU21 = _capdef.CAP_M_CPU21

_capdef.CAP_M_CPU22_swigconstant(_capdef)
CAP_M_CPU22 = _capdef.CAP_M_CPU22

_capdef.CAP_M_CPU23_swigconstant(_capdef)
CAP_M_CPU23 = _capdef.CAP_M_CPU23

_capdef.CAP_M_CPU24_swigconstant(_capdef)
CAP_M_CPU24 = _capdef.CAP_M_CPU24

_capdef.CAP_M_CPU25_swigconstant(_capdef)
CAP_M_CPU25 = _capdef.CAP_M_CPU25

_capdef.CAP_M_CPU26_swigconstant(_capdef)
CAP_M_CPU26 = _capdef.CAP_M_CPU26

_capdef.CAP_M_CPU27_swigconstant(_capdef)
CAP_M_CPU27 = _capdef.CAP_M_CPU27

_capdef.CAP_M_CPU28_swigconstant(_capdef)
CAP_M_CPU28 = _capdef.CAP_M_CPU28

_capdef.CAP_M_CPU29_swigconstant(_capdef)
CAP_M_CPU29 = _capdef.CAP_M_CPU29

_capdef.CAP_M_CPU30_swigconstant(_capdef)
CAP_M_CPU30 = _capdef.CAP_M_CPU30

_capdef.CAP_M_CPU31_swigconstant(_capdef)
CAP_M_CPU31 = _capdef.CAP_M_CPU31

_capdef.CAP_S_CAP_CPUS_swigconstant(_capdef)
CAP_S_CAP_CPUS = _capdef.CAP_S_CAP_CPUS

_capdef.CAP_M_IMPLICIT_AFFINITY_CLEAR_swigconstant(_capdef)
CAP_M_IMPLICIT_AFFINITY_CLEAR = _capdef.CAP_M_IMPLICIT_AFFINITY_CLEAR

_capdef.CAP_M_IMPLICIT_AFFINITY_SET_swigconstant(_capdef)
CAP_M_IMPLICIT_AFFINITY_SET = _capdef.CAP_M_IMPLICIT_AFFINITY_SET

_capdef.CAP_M_IMPLICIT_DEFAULT_ONLY_swigconstant(_capdef)
CAP_M_IMPLICIT_DEFAULT_ONLY = _capdef.CAP_M_IMPLICIT_DEFAULT_ONLY

_capdef.CAP_M_IMPLICIT_ALL_THREADS_swigconstant(_capdef)
CAP_M_IMPLICIT_ALL_THREADS = _capdef.CAP_M_IMPLICIT_ALL_THREADS

_capdef.CAP_S_IMP_FLAGS_swigconstant(_capdef)
CAP_S_IMP_FLAGS = _capdef.CAP_S_IMP_FLAGS

_capdef.CAP_M_FLAG_CHECK_CPU_swigconstant(_capdef)
CAP_M_FLAG_CHECK_CPU = _capdef.CAP_M_FLAG_CHECK_CPU

_capdef.CAP_M_FLAG_PERMANENT_swigconstant(_capdef)
CAP_M_FLAG_PERMANENT = _capdef.CAP_M_FLAG_PERMANENT

_capdef.CAP_M_FLAG_CHECK_CPU_ACTIVE_swigconstant(_capdef)
CAP_M_FLAG_CHECK_CPU_ACTIVE = _capdef.CAP_M_FLAG_CHECK_CPU_ACTIVE

_capdef.CAP_M_FLAG_DEFAULT_ONLY_swigconstant(_capdef)
CAP_M_FLAG_DEFAULT_ONLY = _capdef.CAP_M_FLAG_DEFAULT_ONLY

_capdef.CAP_M_ALL_THREADS_swigconstant(_capdef)
CAP_M_ALL_THREADS = _capdef.CAP_M_ALL_THREADS

_capdef.CAP_M_PURGE_WS_IF_NEW_RAD_swigconstant(_capdef)
CAP_M_PURGE_WS_IF_NEW_RAD = _capdef.CAP_M_PURGE_WS_IF_NEW_RAD

_capdef.CAP_S_CAP_FLAGS_swigconstant(_capdef)
CAP_S_CAP_FLAGS = _capdef.CAP_S_CAP_FLAGS
# This file is compatible with both classic and new-style classes.


