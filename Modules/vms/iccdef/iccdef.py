# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_iccdef', [dirname(__file__)])
        except ImportError:
            import _iccdef
            return _iccdef
        if fp is not None:
            try:
                _mod = imp.load_module('_iccdef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _iccdef = swig_import_helper()
    del swig_import_helper
else:
    import _iccdef
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_iccdef.IOS_ICC_S_IOS_ICC_swigconstant(_iccdef)
IOS_ICC_S_IOS_ICC = _iccdef.IOS_ICC_S_IOS_ICC

_iccdef.IOS_ICC_s_parameters_swigconstant(_iccdef)
IOS_ICC_s_parameters = _iccdef.IOS_ICC_s_parameters

_iccdef.IOS_ICC_s_connect_swigconstant(_iccdef)
IOS_ICC_s_connect = _iccdef.IOS_ICC_s_connect

_iccdef.IOS_ICC_s_receive_swigconstant(_iccdef)
IOS_ICC_s_receive = _iccdef.IOS_ICC_s_receive

_iccdef.IOS_ICC_s_reply_swigconstant(_iccdef)
IOS_ICC_s_reply = _iccdef.IOS_ICC_s_reply

_iccdef.IOS_ICC_s_transceive_swigconstant(_iccdef)
IOS_ICC_s_transceive = _iccdef.IOS_ICC_s_transceive

_iccdef.IOS_ICC_s_reply_buffer_swigconstant(_iccdef)
IOS_ICC_s_reply_buffer = _iccdef.IOS_ICC_s_reply_buffer

_iccdef.ICC_C_receive_len_swigconstant(_iccdef)
ICC_C_receive_len = _iccdef.ICC_C_receive_len

_iccdef.ICC_C_reply_len_swigconstant(_iccdef)
ICC_C_reply_len = _iccdef.ICC_C_reply_len

_iccdef.ICC_C_transceive_len_swigconstant(_iccdef)
ICC_C_transceive_len = _iccdef.ICC_C_transceive_len

_iccdef.ICC_C_MAX_ASSOC_LEN_swigconstant(_iccdef)
ICC_C_MAX_ASSOC_LEN = _iccdef.ICC_C_MAX_ASSOC_LEN

_iccdef.ICC_C_MAX_CONN_DATA_LEN_swigconstant(_iccdef)
ICC_C_MAX_CONN_DATA_LEN = _iccdef.ICC_C_MAX_CONN_DATA_LEN

_iccdef.ICC_M_Synch_Mode_swigconstant(_iccdef)
ICC_M_Synch_Mode = _iccdef.ICC_M_Synch_Mode

_iccdef.ICC_S_ICC_CONNECTION_FLAGS_swigconstant(_iccdef)
ICC_S_ICC_CONNECTION_FLAGS = _iccdef.ICC_S_ICC_CONNECTION_FLAGS

_iccdef.ICC_C_EV_CONNECT_swigconstant(_iccdef)
ICC_C_EV_CONNECT = _iccdef.ICC_C_EV_CONNECT

_iccdef.ICC_C_EV_DISCONNECT_swigconstant(_iccdef)
ICC_C_EV_DISCONNECT = _iccdef.ICC_C_EV_DISCONNECT

_iccdef.ICC_C_min_event_swigconstant(_iccdef)
ICC_C_min_event = _iccdef.ICC_C_min_event

_iccdef.ICC_C_max_event_swigconstant(_iccdef)
ICC_C_max_event = _iccdef.ICC_C_max_event

_iccdef.ICC_C_DFLT_ASSOC_HANDLE_swigconstant(_iccdef)
ICC_C_DFLT_ASSOC_HANDLE = _iccdef.ICC_C_DFLT_ASSOC_HANDLE

_iccdef.ICC_C_DEFAULT_MAXFLOWBUFCNT_swigconstant(_iccdef)
ICC_C_DEFAULT_MAXFLOWBUFCNT = _iccdef.ICC_C_DEFAULT_MAXFLOWBUFCNT
# This file is compatible with both classic and new-style classes.


